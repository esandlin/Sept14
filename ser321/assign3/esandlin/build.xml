<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<project name="assign3." default="targets" basedir="."
         xmlns:dn="antlib:org.apache.ant.dotnet"
         xmlns="antlib:org.apache.tools.ant"
         xmlns:cpptasks="antlib:net.sf.antcontrib.cpptasks">

   <property name="src.dir" value="src/client"/>
   <property name="build.dir"   value="build"/>
   <property name="classes.dir" value="${build.dir}/classes/ser321/assign3/esandlin/client/"/>
   <property name="jar.dir"     value="${build.dir}/jar"/>
	<property name="main-class"  value="src.client.Client"/>
   <property environment="env"/>
   <property name="user" value="${env.USERNAME}"/>      
	  
	<path id="compile.classpath">
	      <pathelement location="${build}"/>
	</path>
	
   <target name="targets">
   	<echo message="targets are: targets, clean, prepare, compile, execute, server, and client."/>
   	  <echo message="java home is: ${java.home}" />
   	  <echo message="os family is: ${os}" />
   	  <echo>start server with: ant server -DhostId=192.168.2.2 -DregPort=2222</echo>
   	  <echo>start client with: ant client -DhostId=192.168.2.2 -DregPort=2222 </echo>
   	  <echo message="manually run client with: java -cp classes;lib/assign3Gui.jar ser321.assign3.esandlin.client.Client localhost:8080" />
   </target>
	
	<!-- Using external libraries--> 
	<path id="classpath">
	        <fileset dir="${lib.dir}" includes="**/*.jar"/>
	    </path>
	
	<!-- Creates the  build, docs and libs directory--> 
   <target name="prepare">
      <mkdir dir="${build}"/>    
      <mkdir dir="${libs.dir}" /> 
      <!-- Create the time stamp -->
      <tstamp/>
      <!-- Create the build directory structure used by compile -->
      <echo message="home defined as: ${home}" />
   </target>
	
<!-- Deletes the existing build, docs and dist directory-->  
   <target name="clean">
      <delete dir="${build}" failonerror="false"/>
   	  <delete dir="${docs}" failonerror="false"/>      
      <delete dir="${libs}" failonerror="false"/>  
   </target>
	
   <target name="build" depends="prepare">
      <javac srcdir="${src.dir}"
             includeantruntime="false"
             destdir="${build}">
         <classpath refid="compile.classpath"/>
      </javac>
   </target>
	
	<target name="jar" depends="build">
	        <jar destfile="${libs.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
	            <manifest>
	                <attribute name="Main-Class" value="${main-class}"/>
	            </manifest>
	        </jar>
	</target>
	
	<target name="run" depends="jar">
	        <java jar="${libs.dir}/${ant.project.name}.jar" fork="true" classname="${main-class}"/>
		<classpath>
		          <path refid="classpath"/>
		          <path location="${libs.dir}/${ant.project.name}.jar"/>
		</classpath>
	</target>

	    <target name="clean-build" depends="clean,jar"/>

	    <target name="main" depends="clean,run"/>

   <target name="execute" depends="build" description="Execute the sample mail client">
         <echo message="command line execute: java -cp classes/ser321/assign3/esandlin/client/Client localhost:8080" />
         <java classname="ser321.assign3.esandlin.client.Client" fork="yes">
         <arg value="localhost:8080"/>
         <classpath refid="compile.classpath"/>
         </java>
   </target>

	<target name="run-server" depends="jar">
	    <java jar="${jar.dir}/${ant.project.name}.jar" fork="true"/>
	</target>

	<target name="run-client" depends="jar">
	    <java classname="EchoClient" fork="true">
	      <classpath>
	        <pathelement location="${jar.dir}/${ant.project.name}.jar"/>
	      </classpath>
	    </java>
	</target>
		
		<!-- set global properties for this build -->
		<path id="Assign3.classpath">
			<pathelement location="bin" />
		</path>

		<!-- classpath  -->
		<path id="compile.classpath">
			<pathelement location="${build}" />
		</path>



		<!-- checks the OS  -->
		<target name="checkos">
			<condition property="os" value="windows">
				<os family="windows" />
			</condition>
			<condition property="os" value="unix">
				<os family="unix" />
			</condition>
			<condition property="os" value="mac">
				<os family="mac" />
			</condition>
		</target>


		<!-- default launch  -->
		<target name="init">
			<mkdir dir="bin" />
			<copy includeemptydirs="false" todir="bin">
				<fileset dir="src">
					<exclude name="**/*.launch" />
					<exclude name="**/*.java" />
				</fileset>
			</copy>
		</target>

		<!-- default build  -->
		<target name="build-subprojects" />
		<target depends="init" name="build-project">
			<echo message="${ant.project.name}: ${ant.file}" />
			<javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
				<src path="src" />
				<classpath refid="Assign3.classpath" />
			</javac>
		</target>
		<target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects" />
		
		<!-- Network and Server  -->
		<target name="client" depends="build"
		           description="Start client">
		         <echo message="user.dir is: ${user.dir}"/>
		         <echo message="command line client: java -cp classes -Djava.security.policy=policyClient RMIClient ${hostId} ${regPort}" />
		         <java classname="RMIClientGui" fork="yes">
		           <classpath refid="compile.classpath"/>
		<!--           <sysproperty key="java.security.policy" value="policyClient"/> -->
		           <arg value="${hostId}"/> 
		           <arg value="${regPort}"/>
		         </java>
		   </target>
		
		<!-- Network and Server  --> 
		<target name="server" depends="build"
		           description="Using parallel task, start server and client">
		     <parallel>
		       <exec dir="${basedir}"
		             executable="rmiregistry">
		         <arg value="${regPort}"/>
		         <env key="CLASSPATH" path="${basedir}/${build}"/>
		       </exec>
		       <sequential>
		         <sleep seconds="10"/>
		         <java classname="Client.RMIServerImpl" fork="yes">
		<!--           <sysproperty key="java.security.policy" value="policyServer"/> -->
		           <sysproperty key="java.rmi.server.hostname" value="${hostId}"/>
		           <arg value="${hostId}"/> 
		           <arg value="${regPort}"/> 
		           <classpath refid="compile.classpath"/>
		         </java>
		       </sequential>
		     </parallel>
		   </target>

</project>
